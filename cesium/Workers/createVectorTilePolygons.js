/*! For license information please see createVectorTilePolygons.js.LICENSE.txt */
import{a as R}from"./chunk-JS6PT4NQ.js";import{a as It}from"./chunk-PWAJ3RAI.js";import{a as M}from"./chunk-O3CFQFRB.js";import{a as bt}from"./chunk-CXNPIJLB.js";import"./chunk-FNJKWSPR.js";import"./chunk-KSZ5EBRB.js";import"./chunk-V3DSE3OK.js";import"./chunk-FMRIJYNG.js";import{a as W}from"./chunk-NNHN6WUY.js";import"./chunk-BKSIEBAA.js";import{h as z}from"./chunk-YWRPWWKI.js";import"./chunk-VTVHUB7E.js";import{a as o,b as nt,d as j}from"./chunk-JMSSU44E.js";import{a as et}from"./chunk-4UYSGV57.js";import"./chunk-ANLJ4KBN.js";import"./chunk-ID6SFQTL.js";import"./chunk-VLPNAR64.js";import"./chunk-GE5NEIZC.js";import{e as A}from"./chunk-35CVRQTC.js";var kt=new o,Bt=new j,Nt=new z,E={min:void 0,max:void 0,indexBytesPerElement:void 0};function Pt(t){let e=new Float64Array(t),n=0;E.indexBytesPerElement=e[n++],E.min=e[n++],E.max=e[n++],o.unpack(e,n,kt),n+=o.packedLength,j.unpack(e,n,Bt),n+=j.packedLength,z.unpack(e,n,Nt)}function Tt(t){let e=t.length,n=0;for(let r=0;r<e;++r)n+=R.packedLength+3+t[r].batchIds.length;return n}function Ct(t,e,n){let r=e.length,o=2+r*M.packedLength+1+Tt(n),a=new Float64Array(o),i=0;a[i++]=t,a[i++]=r;for(let t=0;t<r;++t)M.pack(e[t],a,i),i+=M.packedLength;let s=n.length;a[i++]=s;for(let t=0;t<s;++t){let e=n[t];R.pack(e.color,a,i),i+=R.packedLength,a[i++]=e.offset,a[i++]=e.count;let r=e.batchIds,o=r.length;a[i++]=o;for(let t=0;t<o;++t)a[i++]=r[t]}return a}var yt=32767,wt=new o,Ht=new o,St=new o,Ut=new o,Ft=new o,Lt=new nt,Mt=new z;function Rt(t,e){let n;Pt(t.packedBuffer),n=2===E.indexBytesPerElement?new Uint16Array(t.indices):new Uint32Array(t.indices);let r=new Uint16Array(t.positions),a=new Uint32Array(t.counts),i=new Uint32Array(t.indexCounts),s=new Uint32Array(t.batchIds),f=new Uint32Array(t.batchTableColors),c=new Array(a.length),h=kt,l=Bt,u=Nt,m=E.min,p=E.max,d=t.minimumHeights,I=t.maximumHeights;A(d)&&A(I)&&(d=new Float32Array(d),I=new Float32Array(I));let k,g,w,b=r.length/2,y=r.subarray(0,b),N=r.subarray(b,2*b);bt.zigZagDeltaDecode(y,N);let j=new Float64Array(3*b);for(k=0;k<b;++k){let t=y[k],e=N[k],n=et.lerp(u.west,u.east,t/yt),r=et.lerp(u.south,u.north,e/yt),a=nt.fromRadians(n,r,0,Lt),i=l.cartographicToCartesian(a,wt);o.pack(i,j,3*k)}let x=a.length,L=new Array(x),T=new Array(x),S=0,B=0;for(k=0;k<x;++k)L[k]=S,T[k]=B,S+=a[k],B+=i[k];let U=new Float32Array(3*b*2),F=new Uint16Array(2*b),P=new Uint32Array(T.length),O=new Uint32Array(i.length),C=[],V={};for(k=0;k<x;++k)w=f[k],A(V[w])?(V[w].positionLength+=a[k],V[w].indexLength+=i[k],V[w].batchIds.push(k)):V[w]={positionLength:a[k],indexLength:i[k],offset:0,indexOffset:0,batchIds:[k]};let J,Y=0,G=0;for(w in V)if(V.hasOwnProperty(w)){J=V[w],J.offset=Y,J.indexOffset=G;let t=2*J.positionLength,e=2*J.indexLength+6*J.positionLength;Y+=t,G+=e,J.indexLength=e}let _=[];for(w in V)V.hasOwnProperty(w)&&(J=V[w],_.push({color:R.fromRgba(parseInt(w)),offset:J.indexOffset,count:J.indexLength,batchIds:J.batchIds}));for(k=0;k<x;++k){w=f[k],J=V[w];let t=J.offset,e=3*t,r=t,b=L[k],y=a[k],N=s[k],E=m,x=p;A(d)&&A(I)&&(E=d[k],x=I[k]);let S=Number.POSITIVE_INFINITY,R=Number.NEGATIVE_INFINITY,B=Number.POSITIVE_INFINITY,W=Number.NEGATIVE_INFINITY;for(g=0;g<y;++g){let t=o.unpack(j,3*b+3*g,wt);l.scaleToGeodeticSurface(t,t);let n=l.cartesianToCartographic(t,Lt),a=n.latitude,i=n.longitude;S=Math.min(a,S),R=Math.max(a,R),B=Math.min(i,B),W=Math.max(i,W);let s=l.geodeticSurfaceNormal(t,Ht),f=o.multiplyByScalar(s,E,St),c=o.add(t,f,Ut);f=o.multiplyByScalar(s,x,f);let u=o.add(t,f,Ft);o.subtract(u,h,u),o.subtract(c,h,c),o.pack(u,U,e),o.pack(c,U,e+3),F[r]=N,F[r+1]=N,e+=6,r+=2}u=Mt,u.west=B,u.east=W,u.south=S,u.north=R,c[k]=M.fromRectangle(u,m,p,l);let Y=J.indexOffset,G=T[k],_=i[k];for(P[k]=Y,g=0;g<_;g+=3){let e=n[G+g]-b,r=n[G+g+1]-b,o=n[G+g+2]-b;C[Y++]=2*e+t,C[Y++]=2*r+t,C[Y++]=2*o+t,C[Y++]=2*o+1+t,C[Y++]=2*r+1+t,C[Y++]=2*e+1+t}for(g=0;g<y;++g){let e=g,n=(g+1)%y;C[Y++]=2*e+1+t,C[Y++]=2*n+t,C[Y++]=2*e+t,C[Y++]=2*e+1+t,C[Y++]=2*n+1+t,C[Y++]=2*n+t}J.offset+=2*y,J.indexOffset=Y,O[k]=Y-P[k]}C=W.createTypedArray(U.length/3,C);let H=_.length;for(let t=0;t<H;++t){let e=_[t].batchIds,n=0,r=e.length;for(let t=0;t<r;++t)n+=O[e[t]];_[t].count=n}let v=Ct(2===C.BYTES_PER_ELEMENT?W.UNSIGNED_SHORT:W.UNSIGNED_INT,c,_);return e.push(U.buffer,C.buffer,P.buffer,O.buffer,F.buffer,v.buffer),{positions:U.buffer,indices:C.buffer,indexOffsets:P.buffer,indexCounts:O.buffer,batchIds:F.buffer,packedBuffer:v.buffer}}var Jt=It(Rt);export{Jt as default};